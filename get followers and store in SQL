import tweepy
import csv
import pandas as pd
from sqlalchemy import create_engine
import psycopg2


consumer_key = ""
consumer_secret = ""
access_token = ""
access_token_secret = ""
 
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

api = tweepy.API(auth)
csvFile = open('followers' + '.csv', 'a+', encoding = 'utf-8')
file = csv.writer(csvFile)

screen_name = "JoeBiden"
  
# printing the latest 200 followers of the user 
for follower in api.get_followers(screen_name = screen_name, count = 200):
    print('Name - ' + str(follower.screen_name))
    print('Bio - ' + str(follower.description))
    print('Location - ' + str(follower.location))
    print('Joined at - ' + str(follower.created_at))
    i = [str(follower.screen_name), str(follower.description), str(follower.location), str(follower.created_at)]
    file.writerow(i)
    
hostname = 'localhost'
database = 'tweepy'
username = 'postgres'
password = ''
port_id = 5432

def connectPostgreSQL():
    conn = psycopg2.connect(host = hostname,
                       dbname = database,
                       user = username,
                       password = password,
                       port = port_id)
    cur = conn.cursor()
    
    cur.execute('''CREATE TABLE if not exists followers
                    (
                    Name character(256),
                    description character(256),
                    location character(256),
                    created_at character(256)
                    )''')
    conn.commit()
    conn.close()
print('table tests is created!')
#if _name_ == '_main_':
connectPostgreSQL()
data = pd.read_csv('followers.csv', header = None, names = ['Name', 'description', 
                                                            'location', 'created_at'])

engine = create_engine('postgresql://'+ username +':'+ password +'@localhost:5432/' + database)
print("opened database successfully")
df = pd.DataFrame(data,columns=['Name', 'description', 'location', 'created_at'])
df.to_sql(name='followers', con=engine, if_exists='replace', index_label='ID')
print("insert successfully")
